// Code generated by MockGen. DO NOT EDIT.
// Source: database/database.go

// Package mock_database is a generated GoMock package.
package mock_database

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockDatabase is a mock of Database interface.
type MockDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseMockRecorder
}

// MockDatabaseMockRecorder is the mock recorder for MockDatabase.
type MockDatabaseMockRecorder struct {
	mock *MockDatabase
}

// NewMockDatabase creates a new mock instance.
func NewMockDatabase(ctrl *gomock.Controller) *MockDatabase {
	mock := &MockDatabase{ctrl: ctrl}
	mock.recorder = &MockDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabase) EXPECT() *MockDatabaseMockRecorder {
	return m.recorder
}

// MockDBCreator is a mock of DBCreator interface.
type MockDBCreator struct {
	ctrl     *gomock.Controller
	recorder *MockDBCreatorMockRecorder
}

// MockDBCreatorMockRecorder is the mock recorder for MockDBCreator.
type MockDBCreatorMockRecorder struct {
	mock *MockDBCreator
}

// NewMockDBCreator creates a new mock instance.
func NewMockDBCreator(ctrl *gomock.Controller) *MockDBCreator {
	mock := &MockDBCreator{ctrl: ctrl}
	mock.recorder = &MockDBCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDBCreator) EXPECT() *MockDBCreatorMockRecorder {
	return m.recorder
}

// CreateDialector mocks base method.
func (m *MockDBCreator) CreateDialector() gorm.Dialector {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDialector")
	ret0, _ := ret[0].(gorm.Dialector)
	return ret0
}

// CreateDialector indicates an expected call of CreateDialector.
func (mr *MockDBCreatorMockRecorder) CreateDialector() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDialector", reflect.TypeOf((*MockDBCreator)(nil).CreateDialector))
}

// CreateOpenGorm mocks base method.
func (m *MockDBCreator) CreateOpenGorm() func(gorm.Dialector, *gorm.Config) (*gorm.DB, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOpenGorm")
	ret0, _ := ret[0].(func(gorm.Dialector, *gorm.Config) (*gorm.DB, error))
	return ret0
}

// CreateOpenGorm indicates an expected call of CreateOpenGorm.
func (mr *MockDBCreatorMockRecorder) CreateOpenGorm() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOpenGorm", reflect.TypeOf((*MockDBCreator)(nil).CreateOpenGorm))
}
